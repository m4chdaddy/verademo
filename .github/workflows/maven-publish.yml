# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Veracode Static Analysis Pipeline Scan

      on:
    push:
      branches: [ main2 ]
    pull_request:
      # The branches below must be a subset of the branches above
    branches: [ main2 ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
       # #permissions:
       # contents: read
    #- name: 
     # jobs:
      # This workflow contains a job to build and submit pipeline scan, you will need to customize the build process accordingly and make sure the artifact you build is used as the file input to the pipeline scan file parameter
    name: Pipeline Scan
      #run: 
        
    run: 'build-andupload' 
        # The type of runner that the job will run on
  permissions:
          contents: read # for actions/checkout to fetch code
          security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
  runs-on: ubuntu-latest
        steps:

        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it and copies all sources into ZIP file for submitting for analysis. Replace this section with your applications build steps
        - uses: actions/checkout@v3
          with:
            repository: https://github.com/mokkang/verademo-jenkins.git

        - run: zip -r verademo.zip ./

        # download the Veracode Static Analysis Pipeline scan jar
        - run: curl --silent --show-error --fail -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
        - run: unzip -o pipeline-scan-LATEST.zip

        - uses: actions/setup-java@v3
          with:
            java-version: 8
            distribution: 'temurin'
        - run: java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --fail_on_severity="Very High, High" --file veracode-scan-target.zip
          continue-on-error: true
        - name: Convert pipeline scan output to SARIF format
          id: convert
          uses: veracode/veracode-pipeline-scan-results-to-sarif@ff08ae5b45d5384cb4679932f184c013d34da9be
          with:
            pipeline-results-json: results.json
        - uses: github/codeql-action/upload-sarif@v2
          with:
            # Path to SARIF file relative to the root of the repository
            sarif_file: veracode-results.sarif

